
@misc{wu_budget-feasible_2020,
  title      = {Budget-feasible Maximum Nash Social Welfare Allocation is Almost Envy-free},
  url        = {http://arxiv.org/abs/2012.03766},
  doi        = {10.48550/arXiv.2012.03766},
  abstract   = {The Nash social welfare ({NSW}) is a well-known social welfare measurement that balances individual utilities and the overall efficiency. In the context of fair allocation of indivisible goods, it has been shown by Caragiannis et al. ({EC} 2016 and {TEAC} 2019) that an allocation maximizing the {NSW} is envy-free up to one good ({EF}1). In this paper, we are interested in the fairness of the {NSW} in a budget-feasible allocation problem, in which each item has a cost that will be incurred to the agent it is allocated to, and each agent has a budget constraint on the total cost of items she receives. We show that a budget-feasible allocation that maximizes the {NSW} achieves a 1/4-approximation of {EF}1 and the approximation ratio is tight. The approximation ratio improves gracefully when the items have small costs compared with the agents' budgets; it converges to 1/2 when the budget-cost ratio approaches infinity.},
  number     = {{arXiv}:2012.03766},
  publisher  = {{arXiv}},
  author     = {Wu, Xiaowei and Li, Bo and Gan, Jiarui},
  urldate    = {2022-09-22},
  date       = {2020-12-07},
  eprinttype = {arxiv},
  eprint     = {2012.03766 [cs]},
  keywords   = {Computer Science - Computer Science and Game Theory, Computer Science - Multiagent Systems},
  file       = {arXiv Fulltext PDF:C\:\\Users\\jorsx\\Zotero\\storage\\9KXBY3IV\\Wu et al. - 2020 - Budget-feasible Maximum Nash Social Welfare Alloca.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\jorsx\\Zotero\\storage\\2S6N65DF\\2012.html:text/html}
}

@article{suksompong_constraints_2021,
  title        = {Constraints in fair division},
  volume       = {19},
  issn         = {1551-9031},
  url          = {https://dl.acm.org/doi/10.1145/3505156.3505162},
  doi          = {10.1145/3505156.3505162},
  abstract     = {The fair allocation of resources to interested agents is a fundamental problem in society. While the majority of the fair division literature assumes that all allocations are feasible, in practice there are often constraints on the allocation that can be chosen. In this survey, we discuss fairness guarantees for both divisible (cake cutting) and indivisible resources under several common types of constraints, including connectivity, cardinality, matroid, geometric, separation, budget, and conflict constraints. We also outline a number of open questions and directions.},
  pages        = {46--61},
  number       = {2},
  journaltitle = {{ACM} {SIGecom} Exchanges},
  shortjournal = {{SIGecom} Exch.},
  author       = {Suksompong, Warut},
  urldate      = {2022-09-22},
  date         = {2021-11},
  langid       = {english},
  keywords     = {survey},
  file         = {Suksompong - 2021 - Constraints in fair division.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\GIPTIXMI\\Suksompong - 2021 - Constraints in fair division.pdf:application/pdf}
}

@article{garg_approximating_2018,
  title       = {Approximating Maximin Share Allocations},
  rights      = {Creative Commons Attribution 3.0 Unported license ({CC}-{BY} 3.0)},
  url         = {http://drops.dagstuhl.de/opus/volltexte/2018/10046/},
  doi         = {10.4230/OASICS.SOSA.2019.20},
  abstract    = {We study the problem of fair allocation of M indivisible items among N agents using the popular notion of maximin share as our measure of fairness. The maximin share of an agent is the largest value she can guarantee herself if she is allowed to choose a partition of the items into N bundles (one for each agent), on the condition that she receives her least preferred bundle. A maximin share allocation provides each agent a bundle worth at least their maximin share. While it is known that such an allocation need not exist [9, 7], a series of work [9, 8, 1, 2] provided 2/3 approximation algorithms in which each agent receives a bundle worth at least 2/3 times their maximin share. Recently, [6] improved the approximation guarantee to 3/4. Prior works utilize intricate algorithms, with an exception of [2] which is a simple greedy solution but relies on sophisticated analysis techniques. In this paper, we propose an alternative 2/3 maximin share approximation which oﬀers both a simple algorithm and straightforward analysis. In contrast to other algorithms, our approach allows for a simple and intuitive understanding of why it works.},
  pages       = {11 pages},
  author      = {Garg, Jugal and {McGlaughlin}, Peter and Taki, Setareh},
  editora     = {Wagner, Michael},
  editoratype = {collaborator},
  urldate     = {2022-09-28},
  date        = {2018},
  langid      = {english},
  note        = {Artwork Size: 11 pages
                 Medium: application/pdf
                 Publisher: Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik {GmbH}, Wadern/Saarbruecken, Germany
                 Version Number: 1.0},
  keywords    = {000 Computer science, knowledge, general works, Computer Science, mms},
  file        = {Garg et al. - 2018 - Approximating Maximin Share Allocations.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\7HILK8CT\\Garg et al. - 2018 - Approximating Maximin Share Allocations.pdf:application/pdf}
}

@online{noauthor_general_nodate,
  title    = {A general branch-and-bound algorithm for fair division problems {\textbar} Elsevier Enhanced Reader},
  url      = {https://reader.elsevier.com/reader/sd/pii/S0305054810000559?token=8CB050B2F914829F0DFCA75E05A3B2120B4DB3005E5BF2886C8B564D0AC538F54BD37D9ECCB4879CFC74E27B871EC2B9&originRegion=eu-west-1&originCreation=20221005120030},
  urldate  = {2022-10-05},
  langid   = {english},
  doi      = {10.1016/j.cor.2010.03.001},
  keywords = {bb},
  file     = {Full Text PDF:C\:\\Users\\jorsx\\Zotero\\storage\\PSRF3PX4\\A general branch-and-bound algorithm for fair divi.pdf:application/pdf;Snapshot:C\:\\Users\\jorsx\\Zotero\\storage\\CDJDS69L\\S0305054810000559.html:text/html}
}

@article{fukunaga_branch-and-bound_2011,
  title        = {A branch-and-bound algorithm for hard multiple knapsack problems},
  volume       = {184},
  issn         = {0254-5330, 1572-9338},
  url          = {http://link.springer.com/10.1007/s10479-009-0660-y},
  doi          = {10.1007/s10479-009-0660-y},
  abstract     = {The multiple knapsack problem ({MKP}) is a classical combinatorial optimization problem. A recent algorithm for some classes of the {MKP} is bin-completion, a bin-oriented, branch-and-bound algorithm. In this paper, we propose path-symmetry and path-dominance criteria for pruning nodes in the {MKP} branch-and-bound search space. In addition, we integrate the “bound-and-bound” upper bound validation technique used in previous {MKP} solvers. We show experimentally that our new {MKP} solver, which successfully integrates dominance based pruning, symmetry breaking, and bound-and-bound, signiﬁcantly outperforms previous solvers on some classes of hard problem instances.},
  pages        = {97--119},
  number       = {1},
  journaltitle = {Annals of Operations Research},
  shortjournal = {Ann Oper Res},
  author       = {Fukunaga, Alex S.},
  urldate      = {2022-10-10},
  date         = {2011-04},
  langid       = {english},
  keywords     = {bb, multiple knapsack},
  file         = {Fukunaga - 2011 - A branch-and-bound algorithm for hard multiple kna.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\P9P3KCK8\\Fukunaga - 2011 - A branch-and-bound algorithm for hard multiple kna.pdf:application/pdf}
}

@book{kellerer_knapsack_2004,
  location  = {Berlin, Heidelberg},
  title     = {Knapsack Problems},
  isbn      = {978-3-642-07311-3 978-3-540-24777-7},
  url       = {http://link.springer.com/10.1007/978-3-540-24777-7},
  publisher = {Springer Berlin Heidelberg},
  author    = {Kellerer, Hans and Pferschy, Ulrich and Pisinger, David},
  urldate   = {2022-10-10},
  date      = {2004},
  langid    = {english},
  doi       = {10.1007/978-3-540-24777-7},
  keywords  = {multiple knapsack},
  file      = {Kellerer et al. - 2004 - Knapsack Problems.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\2PTNX8ML\\Kellerer et al. - 2004 - Knapsack Problems.pdf:application/pdf}
}

@book{blanchard_macroeconomics_2010,
  location   = {Harlow, England ; New York},
  title      = {Macroeconomics: a European perspective},
  isbn       = {978-0-273-72800-9},
  shorttitle = {Macroeconomics},
  pagetotal  = {586},
  publisher  = {Prentice Hall},
  author     = {Blanchard, Olivier and Amighini, Alessia and Giavazzi, Francesco},
  date       = {2010},
  langid     = {english},
  keywords   = {Europe, Macroeconomics}
}

@article{wang_successive_2009,
  title        = {A successive approximation algorithm for the multiple knapsack problem},
  abstract     = {It is well-known that the multiple knapsack problem is {NP}-hard, and does not admit an {FPTAS} even for the case of two identical knapsacks. Whereas the 0-1 knapsack problem with only one knapsack has been intensively studied, and some effective exact or approximation algorithms exist. A natural approach for the multiple knapsack problem is to pack the knapsacks successively by using an effective algorithm for the 0-1 knapsack problem. This paper considers such an approximation algorithm that packs the knapsacks in the nondecreasing order of their capacities. We analyze this algorithm for 2 and 3 knapsack problems by the worst-case analysis method and give all their error bounds.},
  pages        = {20},
  journaltitle = {J Comb Optim},
  author       = {Wang, Zhenbo and Xing, Wenxun},
  date         = {2009},
  langid       = {english},
  file         = {Wang and Xing - 2009 - A successive approximation algorithm for the multi.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\IB3RDSFU\\Wang and Xing - 2009 - A successive approximation algorithm for the multi.pdf:application/pdf}
}

@online{noauthor_algorithmic_nodate,
  title   = {Algorithmic approaches to the multiple knapsack assignment problem {\textbar} Elsevier Enhanced Reader},
  url     = {https://reader.elsevier.com/reader/sd/pii/S030504831830149X?token=96C834A168DE055A3BEB383DCB82A4A82599EC73D1389F7F6D341CFB532967EB0E9787E9B601040E47DC82F9B3A56F63&originRegion=eu-west-1&originCreation=20221020083959},
  urldate = {2022-10-20},
  langid  = {english},
  doi     = {10.1016/j.omega.2018.11.013},
  file    = {Full Text PDF:C\:\\Users\\jorsx\\Zotero\\storage\\CEAYJT5U\\Algorithmic approaches to the multiple knapsack as.pdf:application/pdf;Snapshot:C\:\\Users\\jorsx\\Zotero\\storage\\M28PVVHR\\S030504831830149X.html:text/html}
}

@article{dellamico_mathematical_2019,
  title        = {Mathematical models and decomposition methods for the multiple knapsack problem},
  volume       = {274},
  issn         = {0377-2217},
  url          = {https://www.sciencedirect.com/science/article/pii/S0377221718309111},
  doi          = {10.1016/j.ejor.2018.10.043},
  abstract     = {We consider the multiple knapsack problem, that calls for the optimal assignment of a set of items, each having a profit and a weight, to a set of knapsacks, each having a maximum capacity. The problem has relevant managerial implications and is known to be very difficult to solve in practice for instances of realistic size. We review the main results from the literature, including a classical mathematical model and a number of improvement techniques. We then present two new pseudo-polynomial formulations, together with specifically tailored decomposition algorithms to tackle the practical difficulty of the problem. Extensive computational experiments show the effectiveness of the proposed approaches.},
  pages        = {886--899},
  number       = {3},
  journaltitle = {European Journal of Operational Research},
  shortjournal = {European Journal of Operational Research},
  author       = {Dell’Amico, Mauro and Delorme, Maxence and Iori, Manuel and Martello, Silvano},
  urldate      = {2022-10-20},
  date         = {2019-05-01},
  langid       = {english},
  keywords     = {Combinatorial optimization, Decomposition methods, Exact algorithms, Multiple knapsack problem, Pseudo-polynomial formulations},
  file         = {ScienceDirect Full Text PDF:C\:\\Users\\jorsx\\Zotero\\storage\\N7G2JW25\\Dell’Amico et al. - 2019 - Mathematical models and decomposition methods for .pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\jorsx\\Zotero\\storage\\9MXQZAB5\\S0377221718309111.html:text/html}
}

@online{pisinger_linear_nodate,
  title   = {Linear Time Algorithms for Knapsack Problems with Bounded Weights {\textbar} Elsevier Enhanced Reader},
  url     = {https://reader.elsevier.com/reader/sd/pii/S0196677499910349?token=F92FCA159FB536A226AAAED301337FBFCDF9F1836AD139E22A6054D3E474E2A308015106ED3FD66FD2FB1E57A662A519&originRegion=eu-west-1&originCreation=20221026133032},
  author  = {Pisinger, David},
  urldate = {2022-10-26},
  langid  = {english},
  doi     = {10.1006/jagm.1999.1034},
  file    = {Full Text PDF:C\:\\Users\\jorsx\\Zotero\\storage\\NR8FG8NR\\Linear Time Algorithms for Knapsack Problems with .pdf:application/pdf;Snapshot:C\:\\Users\\jorsx\\Zotero\\storage\\QSJCJZS2\\S0196677499910349.html:text/html}
}

@online{pisinger_exact_nodate,
  title      = {An exact algorithm for large multiple knapsack problems},
  url        = {https://www.sciencedirect.com/science/article/abs/pii/S0377221798001209},
  shorttitle = {{PII}},
  author     = {Pisinger, David},
  urldate    = {2022-10-27},
  langid     = {english},
  doi        = {10.1016/S0377-2217(98)00120-9},
  file       = {Full Text PDF:C\:\\Users\\jorsx\\Zotero\\storage\\SIESQJ34\\PII S0377-2217(98)00120-9  Elsevier Enhanced Rea.pdf:application/pdf;Snapshot:C\:\\Users\\jorsx\\Zotero\\storage\\CLPUSEWZ\\S0377221798001209.html:text/html}
}

@article{fukunaga_bin_2007,
  title        = {Bin Completion Algorithms for Multicontainer Packing, Knapsack, and Covering Problems},
  volume       = {28},
  issn         = {1076-9757},
  url          = {https://jair.org/index.php/jair/article/view/10492},
  doi          = {10.1613/jair.2106},
  abstract     = {Many combinatorial optimization problems such as the bin packing and multiple knapsack problems involve assigning a set of discrete objects to multiple containers. These problems can be used to model task and resource allocation problems in multi-agent systems and distributed systms, and can also be found as subproblems of scheduling problems. We propose bin completion, a branch-and-bound strategy for one-dimensional, multicontainer packing problems. Bin completion combines a bin-oriented search space with a powerful dominance criterion that enables us to prune much of the space. The performance of the basic bin completion framework can be enhanced by using a number of extensions, including nogood-based pruning techniques that allow further exploitation of the dominance criterion. Bin completion is applied to four problems: multiple knapsack, bin covering, min-cost covering, and bin packing. We show that our bin completion algorithms yield new, state-of-the-art results for the multiple knapsack, bin covering, and min-cost covering problems, outperforming previous algorithms by several orders of magnitude with respect to runtime on some classes of hard, random problem instances. For the bin packing problem, we demonstrate signiﬁcant improvements compared to most previous results, but show that bin completion is not competitive with current state-of-the-art cutting-stock based approaches.},
  pages        = {393--429},
  journaltitle = {Journal of Artificial Intelligence Research},
  shortjournal = {jair},
  author       = {Fukunaga, A. S. and Korf, R. E.},
  urldate      = {2022-11-03},
  date         = {2007-03-30},
  langid       = {english},
  file         = {Fukunaga and Korf - 2007 - Bin Completion Algorithms for Multicontainer Packi.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\ZUKGZ645\\Fukunaga and Korf - 2007 - Bin Completion Algorithms for Multicontainer Packi.pdf:application/pdf}
}

@article{korf_improved_nodate,
  title    = {An Improved Algorithm for Optimal Bin Packing},
  abstract = {Given a set of numbers, and a set of bins of fixed capacity, the {NP}-complete problem of bin packing is to find the minimum number of bins needed to contain the numbers, such that the sum of the numbers assigned to each bin does not exceed the bin capacity. We present two improvements to our previous bin-completion algorithm. The first speeds up the constant factor per node generation, and the second prunes redundant parts of the search tree. The resulting algorithm appears to be asymptotically faster than our original algorithm. On problems with 90 elements, it runs over 14 times faster. Furthermore, the ratios of node generations and running times both increase with increasing problem size.},
  pages    = {7},
  author   = {Korf, Richard E},
  langid   = {english},
  file     = {Korf - An Improved Algorithm for Optimal Bin Packing.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\L7MS5NMJ\\Korf - An Improved Algorithm for Optimal Bin Packing.pdf:application/pdf}
}

@misc{amanatidis_fair_2022,
  title      = {Fair Division of Indivisible Goods: A Survey},
  url        = {http://arxiv.org/abs/2208.08782},
  shorttitle = {Fair Division of Indivisible Goods},
  abstract   = {Allocating resources to individuals in a fair manner has been a topic of interest since ancient times, with most of the early mathematical work on the problem focusing on resources that are inﬁnitely divisible. Over the last decade, there has been a surge of papers studying computational questions regarding the indivisible case, for which exact fairness notions such as envy-freeness and proportionality are hard to satisfy. One main theme in the recent research agenda is to investigate the extent to which their relaxations, like maximin share fairness ({MMS}) and envy-freeness up to any good ({EFX}), can be achieved. In this survey, we present a comprehensive review of the progress made in the related literature by highlighting diﬀerent ways to relax fairness notions, common algorithm design techniques, and the most interesting questions for future research.},
  number     = {{arXiv}:2208.08782},
  publisher  = {{arXiv}},
  author     = {Amanatidis, Georgios and Aziz, Haris and Birmpas, Georgios and Filos-Ratsikas, Aris and Li, Bo and Moulin, Hervé and Voudouris, Alexandros A. and Wu, Xiaowei},
  urldate    = {2022-11-16},
  date       = {2022-08-18},
  langid     = {english},
  eprinttype = {arxiv},
  eprint     = {2208.08782 [cs]},
  keywords   = {Computer Science - Computer Science and Game Theory},
  file       = {Amanatidis et al. - 2022 - Fair Division of Indivisible Goods A Survey.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\MLHHLNVG\\Amanatidis et al. - 2022 - Fair Division of Indivisible Goods A Survey.pdf:application/pdf}
}

@article{caragiannis_unreasonable_2019,
  title        = {The Unreasonable Fairness of Maximum Nash Welfare},
  volume       = {7},
  issn         = {2167-8375, 2167-8383},
  url          = {https://dl.acm.org/doi/10.1145/3355902},
  doi          = {10.1145/3355902},
  abstract     = {The
                  maximum Nash welfare ({MNW})
                  solution—which selects an allocation that maximizes the product of utilities—is known to provide outstanding fairness guarantees when allocating divisible goods. And while it seems to lose its luster when applied to indivisible goods, we show that, in fact, the {MNW} solution is strikingly fair even in that setting. In particular, we prove that it selects allocations that are envy-free up to one good—a compelling notion that is quite elusive when coupled with economic efficiency. We also establish that the {MNW} solution provides a good approximation to another popular (yet possibly infeasible) fairness property, the maximin share guarantee, in theory and—even more so—in practice. While finding the {MNW} solution is computationally hard, we develop a nontrivial implementation and demonstrate that it scales well on real data. These results establish {MNW} as a compelling solution for allocating indivisible goods and underlie its deployment on a popular fair-division website.},
  pages        = {1--32},
  number       = {3},
  journaltitle = {{ACM} Transactions on Economics and Computation},
  shortjournal = {{ACM} Trans. Econ. Comput.},
  author       = {Caragiannis, Ioannis and Kurokawa, David and Moulin, Hervé and Procaccia, Ariel D. and Shah, Nisarg and Wang, Junxing},
  urldate      = {2022-11-25},
  date         = {2019-10-12},
  langid       = {english},
  file         = {Caragiannis et al. - 2019 - The Unreasonable Fairness of Maximum Nash Welfare.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\MCXA5ZXU\\Caragiannis et al. - 2019 - The Unreasonable Fairness of Maximum Nash Welfare.pdf:application/pdf}
}

@inproceedings{lipton_approximately_2004,
  location   = {New York, {NY}, {USA}},
  title      = {On approximately fair allocations of indivisible goods},
  url        = {http://portal.acm.org/citation.cfm?doid=988772.988792},
  doi        = {10.1145/988772.988792},
  eventtitle = {the 5th {ACM} conference},
  pages      = {125},
  booktitle  = {Proceedings of the 5th {ACM} conference on Electronic commerce  - {EC} '04},
  publisher  = {{ACM} Press},
  author     = {Lipton, R. J. and Markakis, E. and Mossel, E. and Saberi, A.},
  urldate    = {2022-11-25},
  date       = {2004},
  langid     = {english},
  file       = {Lipton et al. - 2004 - On approximately fair allocations of indivisible g.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\BBY5HHCC\\Lipton et al. - 2004 - On approximately fair allocations of indivisible g.pdf:application/pdf}
}

@misc{viswanathan_yankee_2022,
  title      = {Yankee Swap: a Fast and Simple Fair Allocation Mechanism for Matroid Rank Valuations},
  url        = {http://arxiv.org/abs/2206.08495},
  shorttitle = {Yankee Swap},
  abstract   = {We study the problem of fair allocation of indivisible goods when agents have matroid rank valuations. Our main contribution is a simple algorithm based on the colloquial Yankee Swap procedure that computes provably fair and eﬃcient Lorenz dominating allocations. While there exist polynomial time algorithms to compute such allocations, our proposed method improves upon them in two ways. (a) Our approach is easy to understand and does not use complex matroid optimization algorithms as subroutines. (b) Our approach is scalable; it is provably faster than all known algorithms to compute Lorenz dominating allocations. These two properties are key to the adoption of algorithms in any real fair allocation setting; our proposed method brings us one step closer to this goal.},
  number     = {{arXiv}:2206.08495},
  publisher  = {{arXiv}},
  author     = {Viswanathan, Vignesh and Zick, Yair},
  urldate    = {2022-11-27},
  date       = {2022-07-07},
  langid     = {english},
  eprinttype = {arxiv},
  eprint     = {2206.08495 [cs]},
  keywords   = {Computer Science - Artificial Intelligence, Computer Science - Data Structures and Algorithms},
  file       = {Viswanathan and Zick - 2022 - Yankee Swap a Fast and Simple Fair Allocation Mec.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\4HNWSNJV\\Viswanathan and Zick - 2022 - Yankee Swap a Fast and Simple Fair Allocation Mec.pdf:application/pdf}
}

@misc{bouveret_fair_2017,
  title      = {Fair Division of a Graph},
  url        = {http://arxiv.org/abs/1705.10239},
  abstract   = {We consider fair allocation of indivisible items under an additional constraint: there is an undirected graph describing the relationship between the items, and each agent’s share must form a connected subgraph of this graph. This framework captures, e.g., fair allocation of land plots, where the graph describes the accessibility relation among the plots. We focus on agents that have additive utilities for the items, and consider several common fair division solution concepts, such as proportionality, envy-freeness and maximin share guarantee. While ﬁnding good allocations according to these solution concepts is computationally hard in general, we design efﬁcient algorithms for special cases where the underlying graph has simple structure, and/or the number of agents—or, less restrictively, the number of agent types—is small. In particular, despite non-existence results in the general case, we prove that for acyclic graphs a maximin share allocation always exists and can be found efﬁciently.},
  number     = {{arXiv}:1705.10239},
  publisher  = {{arXiv}},
  author     = {Bouveret, Sylvain and Cechlárová, Katarína and Elkind, Edith and Igarashi, Ayumi and Peters, Dominik},
  urldate    = {2022-12-06},
  date       = {2017-06-06},
  langid     = {english},
  eprinttype = {arxiv},
  eprint     = {1705.10239 [cs]},
  keywords   = {Computer Science - Computer Science and Game Theory},
  file       = {Bouveret et al. - 2017 - Fair Division of a Graph.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\GS7DDB4E\\Bouveret et al. - 2017 - Fair Division of a Graph.pdf:application/pdf}
}

@article{hummel_fair_2021,
  title        = {Fair allocation of conflicting items},
  volume       = {36},
  issn         = {1573-7454},
  url          = {https://doi.org/10.1007/s10458-021-09537-3},
  doi          = {10.1007/s10458-021-09537-3},
  abstract     = {We study fair allocation of indivisible items, where the items are furnished with a set of conflicts, and agents are not permitted to receive conflicting items. This kind of constraint captures, for example, participating in events that overlap in time, or taking on roles in the presence of conflicting interests. We demonstrate, both theoretically and experimentally, that fairness characterizations such as {EF}1, {MMS} and {MNW} still are applicable and useful under item conflicts. Among other existence, non-existence and computability results, we show that a \$\$1/{\textbackslash}Delta \$\$-approximate {MMS} allocation for n agents may be found in polynomial time when \$\$n{\textgreater}{\textbackslash}Delta {\textgreater}2\$\$, for any conflict graph with maximum degree \$\${\textbackslash}Delta\$\$, and that, if \$\$n {\textgreater} {\textbackslash}Delta \$\$, a 1/3-approximate {MMS} allocation always exists.},
  pages        = {8},
  number       = {1},
  journaltitle = {Autonomous Agents and Multi-Agent Systems},
  author       = {Hummel, Halvard and Hetland, Magnus Lie},
  urldate      = {2022-12-06},
  date         = {2021-12-23},
  keywords     = {Approximation, Fair allocation, Graph coloring},
  file         = {Full Text PDF:C\:\\Users\\jorsx\\Zotero\\storage\\ML4X8IKM\\Hummel and Hetland - 2021 - Fair allocation of conflicting items.pdf:application/pdf}
}

@online{hetland_mlhetlandallocationsjl_nodate,
  title      = {mlhetland/Allocations.jl: Algorithms for fair item allocation.},
  url        = {https://github.com/mlhetland/Allocations.jl},
  titleaddon = {{GitHub}},
  author     = {Hetland, Magnus Lie},
  urldate    = {2022-12-09},
  file       = {GitHub - mlhetland/Allocations.jl\: Algorithms for fair item allocation.:C\:\\Users\\jorsx\\Zotero\\storage\\VIVVWPLJ\\Allocations.html:text/html}
}

@article{dunning_jump_2017,
  title        = {{JuMP}: A Modeling Language for Mathematical Optimization},
  volume       = {59},
  issn         = {0036-1445, 1095-7200},
  url          = {https://epubs.siam.org/doi/10.1137/15M1020575},
  doi          = {10.1137/15M1020575},
  shorttitle   = {{JuMP}},
  abstract     = {{JuMP} is an open-source modeling language that allows users to express a wide range of optimization problems (linear, mixed-integer, quadratic, conic-quadratic, semideﬁnite, and nonlinear) in a high-level, algebraic syntax. {JuMP} takes advantage of advanced features of the Julia programming language to oﬀer unique functionality while achieving performance on par with commercial modeling tools for standard tasks. In this work we will provide benchmarks, present the novel aspects of the implementation, and discuss how {JuMP} can be extended to new problem classes and composed with state-of-the-art tools for visualization and interactivity.},
  pages        = {295--320},
  number       = {2},
  journaltitle = {{SIAM} Review},
  shortjournal = {{SIAM} Rev.},
  author       = {Dunning, Iain and Huchette, Joey and Lubin, Miles},
  urldate      = {2022-12-09},
  date         = {2017-01},
  langid       = {english},
  file         = {Dunning et al. - 2017 - JuMP A Modeling Language for Mathematical Optimiz.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\7FM5KFT8\\Dunning et al. - 2017 - JuMP A Modeling Language for Mathematical Optimiz.pdf:application/pdf}
}

@article{zhang_complexity_1986,
  title        = {The complexity of the 0/1 multi-knapsack problem},
  volume       = {1},
  issn         = {1000-9000, 1860-4749},
  url          = {http://link.springer.com/10.1007/BF02943300},
  doi          = {10.1007/BF02943300},
  abstract     = {In this paper complexity of the 0/1 multi-knapsack problem is discussed. First we prove that the correspondingdecisionproblem is {NP}-completein the strong sense. For any fixed number k of knapsacks, the problem is only {NP}-completein the ordinarysense, but not {NP}-completein the strong sense. Then, we prove that the 0/1 multi-knapsack optimization problem is {NP}-equivalent by using Turing reduction.},
  pages        = {46--50},
  number       = {1},
  journaltitle = {Journal of Computer Science and Technology},
  shortjournal = {J. of Compt. Sci. \& Technol.},
  author       = {Zhang, Li’ang and Geng, Suyun},
  urldate      = {2022-12-09},
  date         = {1986-03},
  langid       = {english},
  file         = {Zhang and Geng - 1986 - The complexity of the 01 multi-knapsack problem.pdf:C\:\\Users\\jorsx\\Zotero\\storage\\GCW87D2G\\Zhang and Geng - 1986 - The complexity of the 01 multi-knapsack problem.pdf:application/pdf}
}

@article{pisinger_minimal_1997,
  title        = {A Minimal Algorithm for the 0-1 Knapsack Problem},
  volume       = {45},
  issn         = {0030-364X},
  url          = {https://pubsonline.informs.org/doi/abs/10.1287/opre.45.5.758},
  doi          = {10.1287/opre.45.5.758},
  abstract     = {Several types of large-sized 0-1 Knapsack Problems ({KP}) may be easily solved, but in such cases most of the computational effort is used for sorting and reduction. In order to avoid this problem it has been proposed to solve the so-called core of the problem: a Knapsack Problem defined on a small subset of the variables. The exact core cannot, however, be identified before {KP} is solved to optimality, thus, previous algorithms had to rely on approximate core sizes.
                  
                  In this paper we present an algorithm for {KP} where the enumerated core size is minimal, and the computational effort for sorting and reduction also is limited according to a hierarchy. The algorithm is based on a dynamic programming approach, where the core size is extended by need, and the sorting and reduction is performed in a similar “lazy” way.
                  
                  Computational experiments are presented for several commonly occurring types of data instances. Experience from these tests indicate that the presented approach outperforms any known algorithm for {KP}, having very stable solution times.},
  pages        = {758--767},
  number       = {5},
  journaltitle = {Operations Research},
  author       = {Pisinger, David},
  urldate      = {2022-12-10},
  date         = {1997-10},
  note         = {Publisher: {INFORMS}},
  keywords     = {algorithms, dynamic programming, dynamic programming algorithm for knapsack problem, integer, knapsack problem, programming}
}

@article{martello_bound_1981,
  title        = {A Bound and Bound algorithm for the zero-one multiple knapsack problem},
  volume       = {3},
  issn         = {0166-218X},
  url          = {https://www.sciencedirect.com/science/article/pii/0166218X81900056},
  doi          = {10.1016/0166-218X(81)90005-6},
  series       = {Special Copy},
  abstract     = {By the term “Bound and Bound” we define a particular tree-search technique for the {ILP}, which, for a maximization problem, makes use of a lower bound to determine the branches to follow in the decision tree. This technique is applied to the solution of the Zero-One Multiple Knapsack Problem and an algorithm is derived; an illustrative example of the procedure is provided. We present extensive computational results showing that the method is capable of solving problems up to 4 knapsacks and 200 variables with running times considerably smaller than those of the most commonly utilized algorithms.},
  pages        = {275--288},
  number       = {4},
  journaltitle = {Discrete Applied Mathematics},
  shortjournal = {Discrete Applied Mathematics},
  author       = {Martello, Silvano and Toth, Paolo},
  urldate      = {2022-12-10},
  date         = {1981-11-01},
  langid       = {english},
  file         = {ScienceDirect Full Text PDF:C\:\\Users\\jorsx\\Zotero\\storage\\ANUKUGYP\\Martello and Toth - 1981 - A Bound and Bound algorithm for the zero-one multi.pdf:application/pdf;ScienceDirect Snapshot:C\:\\Users\\jorsx\\Zotero\\storage\\WMRGDJSM\\0166218X81900056.html:text/html}
}
